// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ExtensionHost.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protogame.Editor.Grpc.ExtensionHost {

  /// <summary>Holder for reflection information generated from ExtensionHost.proto</summary>
  public static partial class ExtensionHostReflection {

    #region Descriptor
    /// <summary>File descriptor for ExtensionHost.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExtensionHostReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNFeHRlbnNpb25Ib3N0LnByb3RvIjcKDFN0YXJ0UmVxdWVzdBIUCgxhc3Nl",
            "bWJseVBhdGgYASABKAkSEQoJZWRpdG9yVXJsGAIgASgJIiUKDVN0YXJ0UmVz",
            "cG9uc2USFAoMZXh0ZW5zaW9uVXJsGAMgASgJIiwKFk1lbnVJdGVtQ2xpY2tl",
            "ZFJlcXVlc3QSEgoKbWVudUl0ZW1JZBgBIAEoAyIZChdNZW51SXRlbUNsaWNr",
            "ZWRSZXNwb25zZTI9ChNFeHRlbnNpb25Ib3N0U2VydmVyEiYKBVN0YXJ0Eg0u",
            "U3RhcnRSZXF1ZXN0Gg4uU3RhcnRSZXNwb25zZTJUCgxNZW51Q2FsbGJhY2sS",
            "RAoPTWVudUl0ZW1DbGlja2VkEhcuTWVudUl0ZW1DbGlja2VkUmVxdWVzdBoY",
            "Lk1lbnVJdGVtQ2xpY2tlZFJlc3BvbnNlQiaqAiNQcm90b2dhbWUuRWRpdG9y",
            "LkdycGMuRXh0ZW5zaW9uSG9zdGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protogame.Editor.Grpc.ExtensionHost.StartRequest), global::Protogame.Editor.Grpc.ExtensionHost.StartRequest.Parser, new[]{ "AssemblyPath", "EditorUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protogame.Editor.Grpc.ExtensionHost.StartResponse), global::Protogame.Editor.Grpc.ExtensionHost.StartResponse.Parser, new[]{ "ExtensionUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protogame.Editor.Grpc.ExtensionHost.MenuItemClickedRequest), global::Protogame.Editor.Grpc.ExtensionHost.MenuItemClickedRequest.Parser, new[]{ "MenuItemId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protogame.Editor.Grpc.ExtensionHost.MenuItemClickedResponse), global::Protogame.Editor.Grpc.ExtensionHost.MenuItemClickedResponse.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class StartRequest : pb::IMessage<StartRequest> {
    private static readonly pb::MessageParser<StartRequest> _parser = new pb::MessageParser<StartRequest>(() => new StartRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protogame.Editor.Grpc.ExtensionHost.ExtensionHostReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartRequest(StartRequest other) : this() {
      assemblyPath_ = other.assemblyPath_;
      editorUrl_ = other.editorUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartRequest Clone() {
      return new StartRequest(this);
    }

    /// <summary>Field number for the "assemblyPath" field.</summary>
    public const int AssemblyPathFieldNumber = 1;
    private string assemblyPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssemblyPath {
      get { return assemblyPath_; }
      set {
        assemblyPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "editorUrl" field.</summary>
    public const int EditorUrlFieldNumber = 2;
    private string editorUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EditorUrl {
      get { return editorUrl_; }
      set {
        editorUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AssemblyPath != other.AssemblyPath) return false;
      if (EditorUrl != other.EditorUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AssemblyPath.Length != 0) hash ^= AssemblyPath.GetHashCode();
      if (EditorUrl.Length != 0) hash ^= EditorUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AssemblyPath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AssemblyPath);
      }
      if (EditorUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EditorUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AssemblyPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssemblyPath);
      }
      if (EditorUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EditorUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartRequest other) {
      if (other == null) {
        return;
      }
      if (other.AssemblyPath.Length != 0) {
        AssemblyPath = other.AssemblyPath;
      }
      if (other.EditorUrl.Length != 0) {
        EditorUrl = other.EditorUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AssemblyPath = input.ReadString();
            break;
          }
          case 18: {
            EditorUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartResponse : pb::IMessage<StartResponse> {
    private static readonly pb::MessageParser<StartResponse> _parser = new pb::MessageParser<StartResponse>(() => new StartResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protogame.Editor.Grpc.ExtensionHost.ExtensionHostReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartResponse(StartResponse other) : this() {
      extensionUrl_ = other.extensionUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartResponse Clone() {
      return new StartResponse(this);
    }

    /// <summary>Field number for the "extensionUrl" field.</summary>
    public const int ExtensionUrlFieldNumber = 3;
    private string extensionUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExtensionUrl {
      get { return extensionUrl_; }
      set {
        extensionUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExtensionUrl != other.ExtensionUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExtensionUrl.Length != 0) hash ^= ExtensionUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExtensionUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ExtensionUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExtensionUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtensionUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartResponse other) {
      if (other == null) {
        return;
      }
      if (other.ExtensionUrl.Length != 0) {
        ExtensionUrl = other.ExtensionUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 26: {
            ExtensionUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MenuItemClickedRequest : pb::IMessage<MenuItemClickedRequest> {
    private static readonly pb::MessageParser<MenuItemClickedRequest> _parser = new pb::MessageParser<MenuItemClickedRequest>(() => new MenuItemClickedRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MenuItemClickedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protogame.Editor.Grpc.ExtensionHost.ExtensionHostReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItemClickedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItemClickedRequest(MenuItemClickedRequest other) : this() {
      menuItemId_ = other.menuItemId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItemClickedRequest Clone() {
      return new MenuItemClickedRequest(this);
    }

    /// <summary>Field number for the "menuItemId" field.</summary>
    public const int MenuItemIdFieldNumber = 1;
    private long menuItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MenuItemId {
      get { return menuItemId_; }
      set {
        menuItemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MenuItemClickedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MenuItemClickedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MenuItemId != other.MenuItemId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MenuItemId != 0L) hash ^= MenuItemId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MenuItemId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MenuItemId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MenuItemId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MenuItemId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MenuItemClickedRequest other) {
      if (other == null) {
        return;
      }
      if (other.MenuItemId != 0L) {
        MenuItemId = other.MenuItemId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MenuItemId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MenuItemClickedResponse : pb::IMessage<MenuItemClickedResponse> {
    private static readonly pb::MessageParser<MenuItemClickedResponse> _parser = new pb::MessageParser<MenuItemClickedResponse>(() => new MenuItemClickedResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MenuItemClickedResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protogame.Editor.Grpc.ExtensionHost.ExtensionHostReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItemClickedResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItemClickedResponse(MenuItemClickedResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItemClickedResponse Clone() {
      return new MenuItemClickedResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MenuItemClickedResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MenuItemClickedResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MenuItemClickedResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
